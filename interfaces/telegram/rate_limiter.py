"""
–ú–æ–¥—É–ª—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è Telegram –±–æ—Ç–∞.
–°–æ–¥–µ—Ä–∂–∏—Ç RateLimiter –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Å—Ç–æ—Ç–æ–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–∞.
"""

import time
import logging
from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from .state import UserState

# –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–≥–µ—Ä
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞–º–∏
MIN_STATUS_UPDATE_INTERVAL = 2.0  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ —Å—Ç–∞—Ç—É—Å–∞ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
MAX_STATUS_UPDATES_PER_MINUTE = 20  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–∞ –≤ –º–∏–Ω—É—Ç—É
PROGRESS_UPDATE_INTERVAL = 3.0  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞


class RateLimiter:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞–º–∏ API."""
    
    def __init__(self) -> None:
        self.global_last_update = 0.0
        self.global_update_count = 0
        self.global_reset_time = time.time()
    
    def can_update_status(self, user_id: int, force_update: bool = False) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        # –ò–º–ø–æ—Ä—Ç –∑–¥–µ—Å—å –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        from .state import get_user_state
        
        current_time = time.time()
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        state = get_user_state(user_id)
        if not state:
            return True
        
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (–¥–ª—è –≤–∞–∂–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)
        if force_update:
            return True
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª
        if current_time - state.last_status_update < MIN_STATUS_UPDATE_INTERVAL:
            logger.debug(f"–°–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            return False
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫, –µ—Å–ª–∏ –ø—Ä–æ—à–ª–∞ –º–∏–Ω—É—Ç–∞
        if current_time - state.status_reset_time >= 60:
            state.status_update_count = 0
            state.status_reset_time = current_time
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –≤ –º–∏–Ω—É—Ç—É
        if state.status_update_count >= MAX_STATUS_UPDATES_PER_MINUTE:
            logger.warning(f"–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            return False
        
        return True
    
    def should_show_progress(self, user_id: int) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–ª—è –¥–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π."""
        # –ò–º–ø–æ—Ä—Ç –∑–¥–µ—Å—å –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        from .state import get_user_state
        
        current_time = time.time()
        state = get_user_state(user_id)
        
        if not state:
            return False
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å, –µ—Å–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏—è –¥–ª–∏—Ç—Å—è –±–æ–ª—å—à–µ 3 —Å–µ–∫—É–Ω–¥
        return current_time - state.current_operation_start >= PROGRESS_UPDATE_INTERVAL
    
    def record_status_update(self, user_id: int) -> None:
        """–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞."""
        # –ò–º–ø–æ—Ä—Ç –∑–¥–µ—Å—å –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        from .state import get_user_state
        
        current_time = time.time()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Å—á–µ—Ç—á–∏–∫–∏
        if current_time - self.global_reset_time >= 60:
            self.global_update_count = 0
            self.global_reset_time = current_time
        
        self.global_update_count += 1
        self.global_last_update = current_time
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        state = get_user_state(user_id)
        if state:
            state.last_status_update = current_time
            state.status_update_count += 1
    
    def start_operation(self, user_id: int) -> None:
        """–û—Ç–º–µ—á–∞–µ—Ç –Ω–∞—á–∞–ª–æ –Ω–æ–≤–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏."""
        # –ò–º–ø–æ—Ä—Ç –∑–¥–µ—Å—å –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        from .state import get_user_state
        
        current_time = time.time()
        state = get_user_state(user_id)
        if state:
            state.current_operation_start = current_time


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä rate limiter
rate_limiter = RateLimiter()


def get_progress_indicator(operation_time: float) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Ä–µ–º–µ–Ω–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏."""
    if operation_time < 5:
        return "üîÑ"
    elif operation_time < 10:
        return "‚è≥"
    elif operation_time < 15:
        return "‚è∞"
    else:
        return "üêå" 