---
description: 
globs: 
alwaysApply: false
---
# Структура проекта MathIDE

## Основные директории

| Папка/файл         | Назначение                                                        |
|-------------------|------------------------------------------------------------------|
| core/             | Ядро системы: логика генерации и применения преобразований         |
| interfaces/       | Реализации пользовательских интерфейсов (CLI, Telegram, Web)       |
| prompts/          | Промпты для GPT и шаблоны сообщений                               |
| tests/            | Юнит-тесты и интеграционные тесты                                 |
| docs/             | Документация, PRD, планы, инструкции                              |
| .cursor/rules/    | Специфичные для Cursor правила и описания                         |
| .venv/            | Виртуальное окружение Python (создаётся автоматически)            |

## Главные файлы

| Файл                      | Назначение                                               |
|--------------------------|----------------------------------------------------------|
| core/engine.py           | Логика генерации/применения преобразований               |
| core/history.py          | Управление историей шагов                                |
| interfaces/cli.py        | CLI-интерфейс                                            |
| interfaces/telegram_bot.py| Telegram-бот                                             |
| interfaces/web.py        | Web API и сервер                                         |
| prompts/generation.md    | Промпт для генерации преобразований                      |
| prompts/apply.md         | Промпт для применения преобразований                     |
| prompts/check.md         | Промпт для проверки решённости                           |
| tests/test_engine.py     | Тесты ядра                                               |
| pyproject.toml          | Управление зависимостями и конфигурация poetry            |

## Конфигурационные файлы

| Файл                      | Назначение                                               | Git статус |
|--------------------------|----------------------------------------------------------|------------|
| .env                     | Основной файл с переменными окружения                     | игнорируется |
| .env.local               | Локальные переопределения переменных окружения            | игнорируется |
| docs/env.example         | Пример файла с переменными окружения                      | отслеживается |
| pyproject.toml          | Конфигурация poetry и зависимостей                        | отслеживается |
| .gitignore              | Список игнорируемых git файлов                            | отслеживается |

## Генерация новых файлов

Новые файлы следует создавать в следующих директориях:
- core/
- interfaces/
- prompts/
- tests/

## Виртуальное окружение

Проект использует poetry для управления зависимостями и виртуальным окружением:
- Виртуальное окружение создаётся в папке `.venv` в корне проекта
- Все зависимости описаны в `pyproject.toml`
- Для установки зависимостей используется команда `poetry install`
- Для активации окружения: `poetry shell` или `source .venv/bin/activate`

## Переменные окружения

Проект использует следующие файлы для конфигурации:
- `.env` - основной файл с переменными окружения (не в git)
- `.env.local` - локальные переопределения (не в git)
- `docs/env.example` - пример конфигурации с описанием всех переменных (в git)

Порядок загрузки (от высшего приоритета к низшему):
1. `.env.local`
2. `.env`
3. `docs/env.example`
4. Системные переменные окружения
